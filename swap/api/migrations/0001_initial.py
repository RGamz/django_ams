# Generated by Django 5.1.1 on 2024-09-09 19:41

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('pseudo', models.CharField(max_length=100)),
                ('id_entite', models.IntegerField(unique=True)),
            ],
            options={
                'db_table': 'admins',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Contrat',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nom', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'contrats',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Entity',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('id_fournisseur', models.IntegerField()),
                ('id_admin', models.IntegerField()),
                ('id_depot', models.IntegerField()),
                ('id_station', models.IntegerField()),
                ('id_etablissement', models.IntegerField()),
                ('id_distributeur', models.IntegerField()),
                ('id_societe', models.IntegerField()),
                ('societe', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'entites',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='LogType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('tr_nom', models.IntegerField()),
            ],
            options={
                'db_table': 'support_tickets_logs_types',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Marque',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nom', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'marques',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SwapEntity',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('id_entite', models.IntegerField()),
            ],
            options={
                'db_table': 'f_entites_swap',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TicketStatus',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'support_tickets_statuts',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TicketType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('tr_title', models.IntegerField()),
            ],
            options={
                'db_table': 'support_tickets_types',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Translate',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('fr', models.TextField()),
                ('en', models.TextField()),
                ('ru', models.TextField()),
            ],
            options={
                'db_table': 'translate',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('id_ticket', models.IntegerField()),
                ('ts', models.IntegerField()),
                ('log_type', models.ForeignKey(db_column='id_type', null=True, on_delete=django.db.models.deletion.CASCADE, to='api.logtype')),
            ],
            options={
                'db_table': 'support_tickets_logs',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Produit',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('ref', models.CharField(max_length=50)),
                ('poids', models.FloatField()),
                ('code_barres', models.CharField(max_length=13)),
                ('tr_nom', models.IntegerField()),
                ('dpr', models.FloatField()),
                ('marque', models.ForeignKey(db_column='id_marque', null=True, on_delete=django.db.models.deletion.CASCADE, to='api.marque')),
            ],
            options={
                'db_table': 'produits',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ArboLink',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('id_arborescence', models.IntegerField()),
                ('produit', models.ForeignKey(db_column='id_produit', null=True, on_delete=django.db.models.deletion.CASCADE, to='api.produit')),
            ],
            options={
                'db_table': 'f_produits_machine',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('id_discussion', models.IntegerField()),
                ('id_particulier', models.IntegerField()),
                ('read', models.BooleanField()),
                ('ts_message', models.IntegerField()),
                ('is_removed', models.BooleanField()),
                ('is_admin_closure', models.BooleanField()),
                ('ts_creation', models.IntegerField()),
                ('statut', models.IntegerField()),
                ('date_claim', models.DateTimeField()),
                ('admin', models.ForeignKey(db_column='id_admin', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='support_ticket_for_admin', to='api.admin', to_field='id_entite')),
                ('distributeur', models.ForeignKey(blank=True, db_column='id_distributeur', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ticket_distributor', to='api.entity')),
                ('produit', models.ForeignKey(db_column='id_machine', null=True, on_delete=django.db.models.deletion.CASCADE, to='api.produit')),
                ('reserved_by', models.ForeignKey(blank=True, db_column='id_admin_claim', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='support_ticket_for_reserved_by', to='api.admin', to_field='id_entite')),
                ('station', models.ForeignKey(blank=True, db_column='id_station', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ticket_station', to='api.entity')),
                ('ticket_status', models.ForeignKey(db_column='id_statut', null=True, on_delete=django.db.models.deletion.CASCADE, to='api.ticketstatus')),
                ('type', models.ForeignKey(db_column='id_type', null=True, on_delete=django.db.models.deletion.CASCADE, to='api.tickettype')),
            ],
            options={
                'db_table': 'support_tickets',
                'ordering': ['id'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Discussion',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('id_entite', models.IntegerField()),
                ('message', models.TextField()),
                ('for_particulier', models.BooleanField()),
                ('for_station', models.BooleanField()),
                ('for_distributeur', models.BooleanField()),
                ('ts_creation', models.IntegerField()),
                ('id_discussion', models.ForeignKey(db_column='id_discussion', null=True, on_delete=django.db.models.deletion.CASCADE, to='api.ticket')),
            ],
            options={
                'db_table': 'discussions_messages',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TicketContrat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contrat', models.ForeignKey(blank=True, db_column='id_contrat', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ticketcontrat', to='api.contrat')),
                ('ticket', models.OneToOneField(blank=True, db_column='id_ticket', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ticketcontrat', to='api.ticket')),
            ],
            options={
                'db_table': 'support_tickets_contrat',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='ticketstatus',
            name='tr_nom',
            field=models.OneToOneField(db_column='tr_nom', null=True, on_delete=django.db.models.deletion.CASCADE, to='api.translate'),
        ),
    ]
